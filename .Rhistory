library(tidyverse)
library(brms)
library(tidybayes)
options(stringsAsFactors=F)
dataOG = read.csv('p0Pyk30.csv')
#make two separate data frames in long form:
## 1. for WT and p0Pyk
## 2. for p0
p0PykData = dataOG %>%
gather(key = groups, value = abundance, 1:7)
head(p0PykData)
library(tidyverse)
library(brms)
library(tidybayes)
options(stringsAsFactors=F)
dataOG = read.csv('p0Pyk30.csv')
#make two separate data frames in long form:
## 1. for WT and p0Pyk
## 2. for p0
p0PykData = dataOG %>%
gather(key = groups, value = abundance, 2:7) %>%
rename(metabolite = Normalized by OD600) %>%
head(p0PykData)
library(tidyverse)
library(brms)
library(tidybayes)
options(stringsAsFactors=F)
dataOG = read.csv('p0Pyk30.csv')
#make two separate data frames in long form:
## 1. for WT and p0Pyk
## 2. for p0
p0PykData = dataOG %>%
gather(key = groups, value = abundance, 2:7) %>%
rename(metabolite = Normalized by OD600) %>%
head(p0PykData)
source('C:/Users/oyina/src/senior_2019-2020/spring_2020/political_data_science/problem_sets/ps2/oadenekan_ps2.R', echo=TRUE)
source('C:/Users/oyina/src/senior_2019-2020/spring_2020/political_data_science/problem_sets/ps2/oadenekan_ps2.R', echo=TRUE)
#2
set.seed(14)
print(me)
source('C:/Users/oyina/src/senior_2019-2020/spring_2020/political_data_science/problem_sets/ps2/oadenekan_ps2.R', echo=TRUE)
source('C:/Users/oyina/src/senior_2019-2020/spring_2020/political_data_science/problem_sets/ps2/oadenekan_ps2.R', echo=TRUE)
source('C:/Users/oyina/src/senior_2019-2020/spring_2020/political_data_science/problem_sets/ps2/oadenekan_ps2.R', echo=TRUE)
x = 4
x == 7
x != 7
x != (7|4)
x == (7|4)
x = 4
x == 7
x == (7|4)
source('C:/Users/oyina/src/senior_2019-2020/spring_2020/political_data_science/problem_sets/ps2/oadenekan_ps2.R', echo=TRUE)
source('C:/Users/oyina/src/senior_2019-2020/spring_2020/political_data_science/problem_sets/ps2/oadenekan_ps2.R', echo=TRUE)
row.names(df)
#3
setwd("C:/Users/oyina/src/senior 2019-2020/spring_2020/political_data_science/problem_sets/ps1")
#3
setwd("C:/Users/oyina/src/senior_2019-2020/spring_2020/political_data_science/problem_sets/ps1")
df = read.csv('Expends2002.csv')
df = read.csv('GSS-data.csv')
#3
setwd("C:/Users/oyina/src/senior_2019-2020/spring_2020/political_data_science/problem_sets/ps2")
df = read.csv('GSS-data.csv')
head(df$pres16)
row.names(df)
length(df$pres16)
df = read.table("GSS-data.csv", header = T, sep = ",", row.names = "ID")
?read.csv
# df = read.csv('GSS-data.csv')
df = read.table("GSS-data.csv", header = T, sep = ",")
df = read.csv('GSS-data.csv')
row.names(df)
# df = read.csv('GSS-data.csv')
df = read.table("GSS-data.csv", header = T, sep = ",")
# df = read.csv('GSS-data.csv')
df = read.table("GSS-data.csv", sep = ",")
# df = read.csv('GSS-data.csv')
df = read.table("GSS-data.csv", header = T)
# df = read.csv('GSS-data.csv')
df = read.table("GSS-data.csv", header = T)
df = read.csv('GSS-data.csv')
colnames(df)
which(head(df$pres16 == "Clinton"))
which(df$pres16 == "Clinton")
which(df$pres16[:10] == "Clinton")
which(df$pres16[1:10] == "Clinton")
length(which(df$pres16[1:10] == "Clinton"))
vote.choice = function(name) {
if (name == "Clinton" | name == "Trump") { # if name is clinton or trump
num_peeps = length(which(df$pres16[1:10] == name))
return(num_peeps)
}
else if (name == "Other") { # if person enters other, get entries other than clinton and trump
num_peeps = length(which((df$pres16[1:10] != "Clinton") & (df$pres16[1:10] != "Trump")))
return(num_peeps)
}
else {
print("Please enter either ‘Trump’ ‘Clinton’ or ‘Other’ into the function
to return a valid response")
return()
}
}
vote.choice("Clinton")
vote.choice("Trump")
vote.choice("Other")
vote.choice("jaijfi")
vote.choice(wjf)
install.packages('fivethirtyeight')
library(fivethirtyeight)
install.packages("fivethirtyeight")
install.packages("fivethirtyeight")
#4
library(fivethirtyeight)
cabinet_turnover
head(cabinet_turnover)
row.names(cabinet_turnover)
column.names(cabinet_turnover)
col.names(cabinet_turnover)
colnames(cabinet_turnover)
head(cabinet_turnover)
cabinet_turnover[;10]
cabinet_turnover[:10]
cabinet_turnover[1:10]
cabinet_turnover[,1:10]
cabinet_turnover[1:10,]
# head(cabinet_turnover)
cab_turn = cabinet_turnover
head(cab_tur)
head(cab_turn[which(cab_turn$president == "Carter")])
which(cab_turn$president == "Carter")
cab_turn[which(cab_turn$president == "Carter")]
cab_turn[which(cab_turn$president == "Carter"),]
cab_turn[which(cab_turn$president == "Carter"),]$length
sum(cab_turn[which(cab_turn$president == "Carter"),]$length)
sum(head(cab_turn[which(cab_turn$president == "Carter"),]$length))
sum(head(cab_turn[which(cab_turn$president == "Bush 41"),]$length))
cab_turn[which(cab_turn$president == "Bush 41"),]
cab_turn[which(cab_turn$president == "Bush 41"),]$length
!is.na(cab_turn[which(cab_turn$president == "Bush 41"),]$length)
cab_turn[!is.na(cab_turn[which(cab_turn$president == "Bush 41"),]$length)]
cab_turn[!is.na(cab_turn[which(cab_turn$president == "Bush 41"),]$length),]
cab_turn[!is.na(cab_turn[which(cab_turn$president == "Bush 41"),]$length),]
is.na(cab_turn[which(cab_turn$president == "Bush 41"),]$length)
sum(!is.na(cab_turn[which(cab_turn$president == "Bush 41"),]$length))
cab_turn[!is.na(cab_turn[which(cab_turn$president == "Bush 41"),]$length),]
length(cab_turn[!is.na(cab_turn[which(cab_turn$president == "Bush 41"),]$length),])
nrows(length(cab_turn[!is.na(cab_turn[which(cab_turn$president == "Bush 41"),]$length),]))
nrow(length(cab_turn[!is.na(cab_turn[which(cab_turn$president == "Bush 41"),]$length),]))
nrow(length(cab_turn[!is.na(cab_turn[which(cab_turn$president == "Bush 41"),]$length)$length,]))
nrow(cab_turn[!is.na(cab_turn[which(cab_turn$president == "Bush 41"),]$length),]$length)
nrow(cab_turn[!is.na(cab_turn[which(cab_turn$president == "Bush 41"),]$length),]$length)
cab_turn[which((cab_turn$president == "Bush 41") & (cab_turn$length != NA)),]
cab_turn[which((cab_turn$length != NA)),]
cab_turn[which((cab_turn$president == "Bush 41") & !is.na(cab_turn$length)),]
cab_turn[which((cab_turn$president == "Bush 41") & !is.na(cab_turn$length)),]$length
return num_days
return(num_days)
appoint = function(name) {
valid_name = (name == "Carter")|(name == "Reagan")|(name == "Bush 41")|(name == "Clinton")|(name == "Bush 43")|(name == "Obama")|(name == "Trump")
if (valid_name) {
# data with president name and no NA in length
relevant_data  = cab_turn[which((cab_turn$president == "Bush 41") & !is.na(cab_turn$length)),]
# sum relevant data at length
num_days = sum(relevant_data$length)
return(num_days)
}
else {
return("invalid inputs")
}
}
appoint("Clinton")
appoint("Reagan")
# sum relevant data at length
num_days = sum(relevant_data$days)
appoint = function(name) {
valid_name = (name == "Carter")|(name == "Reagan")|(name == "Bush 41")|(name == "Clinton")|(name == "Bush 43")|(name == "Obama")|(name == "Trump")
if (valid_name) {
# data with president name and no NA in length
relevant_data  = cab_turn[which((cab_turn$president == "Bush 41") & !is.na(cab_turn$days)),]
# sum relevant data at length
num_days = sum(relevant_data$days)
return(num_days)
}
else {
return("invalid inputs")
}
}
appoint("Reagan")
appoint("Reagn")
appoint = function(name) {
valid_name = (name == "Carter")|(name == "Reagan")|(name == "Bush 41")|(name == "Clinton")|(name == "Bush 43")|(name == "Obama")|(name == "Trump")
if (valid_name) {
# data with president name and no NA in length
relevant_data  = cab_turn[which((cab_turn$president == "Bush 41") & !is.na(cab_turn$length)),]
# sum relevant data at length
num_days = sum(relevant_data$length)
return(num_days)
}
else {
return("invalid input")
}
}
appoint("Reagn")
valid_name = (name == "Carter")|(name == "Reagan")|(name == "Bush 41")|(name == "Clinton")|(name == "Bush 43")|(name == "Obama")|(name == "Trump")
appoint = function(name) {
valid_name = (name == "Carter")|(name == "Reagan")|(name == "Bush 41")|(name == "Clinton")|(name == "Bush 43")|(name == "Obama")|(name == "Trump")
if (valid_name) {
# data with president name and no NA in length
relevant_data  = cab_turn[which((cab_turn$president == "Bush 41") & !is.na(cab_turn$length)),]
# sum relevant data at length
num_days = sum(relevant_data$length)
return(which_president(name, num_days))
}
else {
return("invalid input")
}
}
appoint("Reagan")
which_president = function(name, num_days) {
if (name == "Clinton") {
return(num_days/2922)
}
else if (name == "Carter") {
return(num_days/1461)
}
else if (name == "Reagan") {
return(num_days/2922)
}
else if (name == "Bush 41") {
return(num_days/1461)
}
else if (name == "Bush 43") {
return(num_days/2922)
}
else if (name == "Obama") {
return(num_days/2922)
}
else {
return(num_days/1105)
}
}
appoint = function(name) {
valid_name = (name == "Carter")|(name == "Reagan")|(name == "Bush 41")|(name == "Clinton")|(name == "Bush 43")|(name == "Obama")|(name == "Trump")
if (valid_name) {
# data with president name and no NA in length
relevant_data  = cab_turn[which((cab_turn$president == "Bush 41") & !is.na(cab_turn$length)),]
# sum relevant data at length
num_days = sum(relevant_data$length)
return(which_president(name, num_days))
}
else {
return("invalid input")
}
}
appoint("Reagan")
# sum relevant data at length
num_days = sum(relevant_data$length)/nrow(relevant_data)
appoint = function(name) {
valid_name = (name == "Carter")|(name == "Reagan")|(name == "Bush 41")|(name == "Clinton")|(name == "Bush 43")|(name == "Obama")|(name == "Trump")
if (valid_name) {
# data with president name and no NA in length
relevant_data  = cab_turn[which((cab_turn$president == "Bush 41") & !is.na(cab_turn$length)),]
# sum relevant data at length
num_days = sum(relevant_data$length)/nrow(relevant_data)
return(which_president(name, num_days))
}
else {
return("invalid input")
}
}
appoint("Reagan")
appoint = function(name) {
valid_name = (name == "Carter")|(name == "Reagan")|(name == "Bush 41")|(name == "Clinton")|(name == "Bush 43")|(name == "Obama")|(name == "Trump")
if (valid_name) {
# data with president name and no NA in length
relevant_data  = cab_turn[which((cab_turn$president == "Bush 41") & !is.na(cab_turn$length)),]
# sum relevant data at length
num_days = sum(relevant_data$length)/nrow(relevant_data)
return(sum(relevant_data))
# return(which_president(name, num_days))
}
else {
return("invalid input")
}
}
appoint("Reagan")
appoint = function(name) {
valid_name = (name == "Carter")|(name == "Reagan")|(name == "Bush 41")|(name == "Clinton")|(name == "Bush 43")|(name == "Obama")|(name == "Trump")
if (valid_name) {
# data with president name and no NA in length
relevant_data  = cab_turn[which((cab_turn$president == "Bush 41") & !is.na(cab_turn$length)),]
# sum relevant data at length
num_days = sum(relevant_data$length)/nrow(relevant_data)
return(sum(relevant_data$length))
# return(which_president(name, num_days))
}
else {
return("invalid input")
}
}
appoint("Reagan")
return(ave_num_days)
appoint = function(name) {
valid_name = (name == "Carter")|(name == "Reagan")|(name == "Bush 41")|(name == "Clinton")|(name == "Bush 43")|(name == "Obama")|(name == "Trump")
if (valid_name) {
# data with president name and no NA in length
relevant_data  = cab_turn[which((cab_turn$president == "Bush 41") & !is.na(cab_turn$length)),]
# sum relevant data at length
ave_num_days = sum(relevant_data$length)/nrow(relevant_data)
return(ave_num_days)
# return(which_president(name, num_days))
}
else {
return("invalid input")
}
}
appoint("Reagan")
appoint = function(name) {
valid_name = (name == "Carter")|(name == "Reagan")|(name == "Bush 41")|(name == "Clinton")|(name == "Bush 43")|(name == "Obama")|(name == "Trump")
if (valid_name) {
# data with president name and no NA in length
relevant_data  = cab_turn[which((cab_turn$president == name) & !is.na(cab_turn$length)),]
# sum relevant data at length
ave_num_days = sum(relevant_data$length)/nrow(relevant_data)
return(ave_num_days)
# return(which_president(name, num_days))
}
else {
return("invalid input")
}
}
appoint("Reagan")
appoint = function(name) {
valid_name = (name == "Carter")|(name == "Reagan")|(name == "Bush 41")|(name == "Clinton")|(name == "Bush 43")|(name == "Obama")|(name == "Trump")
if (valid_name) {
# data with president name and no NA in length
relevant_data  = cab_turn[which((cab_turn$president == name) & !is.na(cab_turn$length)),]
# sum relevant data at length
ave_num_days = sum(relevant_data$length)/nrow(relevant_data)
return(ave_num_days)
# return(which_president(name, num_days))
}
else {
return("invalid input")
}
}
appoint("Reagan")
appoint = function(name) {
valid_name = (name == "Carter")|(name == "Reagan")|(name == "Bush 41")|(name == "Clinton")|(name == "Bush 43")|(name == "Obama")|(name == "Trump")
if (valid_name) {
# data with president name and no NA in length
relevant_data  = cab_turn[which((cab_turn$president == name) & !is.na(cab_turn$length)),]
# sum relevant data at length
ave_num_days = sum(relevant_data$days)/nrow(relevant_data)
return(ave_num_days)
# return(which_president(name, num_days))
}
else {
return("invalid input")
}
}
appoint("Reagan")
appoint = function(name) {
valid_name = (name == "Carter")|(name == "Reagan")|(name == "Bush 41")|(name == "Clinton")|(name == "Bush 43")|(name == "Obama")|(name == "Trump")
if (valid_name) {
# data with president name and no NA in length
relevant_data  = cab_turn[which((cab_turn$president == name) & !is.na(cab_turn$length)),]
# sum relevant data at length
ave_num_days = sum(relevant_data$days)/nrow(relevant_data)
# return(ave_num_days)
return(which_president(name, num_days))
}
else {
return("invalid input")
}
}
appoint("Reagan")
appoint = function(name) {
valid_name = (name == "Carter")|(name == "Reagan")|(name == "Bush 41")|(name == "Clinton")|(name == "Bush 43")|(name == "Obama")|(name == "Trump")
if (valid_name) {
# data with president name and no NA in length
relevant_data  = cab_turn[which((cab_turn$president == name) & !is.na(cab_turn$length)),]
# sum relevant data at length
ave_num_days = sum(relevant_data$days)/nrow(relevant_data)
# return(ave_num_days)
return(which_president(name, ave_num_days))
}
else {
return("invalid input")
}
}
appoint("Reagan")
#5
cong_age = congress_age
head(cong_age)
# funtion to find number of days in office
appoint = function(name) {
valid_name = (name == "Carter")|(name == "Reagan")|(name == "Bush 41")|(name == "Clinton")|(name == "Bush 43")|(name == "Obama")|(name == "Trump")
if (valid_name) {
# data with president name and no NA in length
relevant_data  = cab_turn[which((cab_turn$president == name) & !is.na(cab_turn$length)),]
# sum relevant data at length
# ave_num_days = sum(relevant_data$days)/nrow(relevant_data)
ave_num_days = mean(relevant_data$days)
# return(ave_num_days)
return(which_president(name, ave_num_days))
}
else {
return("invalid input")
}
}
appoint("Reagan")
head(cong_age)
head(group_by(cong_age, state))
?group_by
??group_by
head(groupBy(cong_age, state))
install.packages("dplyr")
.libPaths()
.libPaths()[2]
install.packages("dplyr", .libPaths()[2])
?by
by(cong_age, cong_age$congress, function(x) mean (x))
by(cong_age, cong_age$congress)
?mean()
by(cong_age, cong_age$congress, function(x) mean (na.rm=TRUE))
by(cong_age, cong_age$congress, mean(na.rm=TRUE))
by(cong_age, cong_age$congress, function(na.rm=TRUE) mean (na.rm=TRUE))
by(cong_age, cong_age$congress, function(na.rm=TRUE) mean (na.rm=TRUE))
by()
?by()
by(cong_age, cong_age$congress, mean(cong_age$age,na.rm=TRUE))
mean()
?mean
by(cong_age, cong_age$congress, mean(cong_age$age,na.rm=TRUE))
?by
?lm()
?by
by(cong_age, cong_age$congress, function (x) mean(cong_age$age,na.rm=TRUE))
head(congress_age)
by(cong_age, cong_age$state, function (x) mean(cong_age$age,na.rm=TRUE))
?mean
by(cong_age, cong_age$state, function (x) sum(cong_age$age,na.rm=TRUE))
by(cong_age, cong_age$state, function (x) sum(cong_age$age,na.rm=TRUE))
?by
ave(cong_age, cong_age$state, FUN = function (x) mean(x, na.rm = TRUE))
ave(cong_age$age, cong_age$state, FUN = function (x) mean(x, na.rm = TRUE))
head(ave(cong_age$age, cong_age$state, FUN = function (x) mean(x, na.rm = TRUE)))
head(cong_age$age)
unique(ave(cong_age$age, cong_age$state, FUN = function (x) mean(x, na.rm = TRUE)))
nrow(unique(ave(cong_age$age, cong_age$state, FUN = function (x) mean(x, na.rm = TRUE))))
unique(cong_age$state)
col2 = unique(ave(cong_age$age, cong_age$state, FUN = function (x) mean(x, na.rm = TRUE)))
col2
col1 = unique(cong_age$state)
data.frame(col1,col2)
df_new = data.frame(col1,col2)
df_new
unique(ave(cong_age$age, cong_age$state, FUN = function (x) mean(x, na.rm = TRUE)))
name = state
name = "state"
unique(ave(cong_age$age, cong_age$name, FUN = function (x) mean(x, na.rm = TRUE)))
unique(ave(cong_age$age, cong_age$state, FUN = function (x) mean(x, na.rm = TRUE)))
#5
cong_age = congress_age
congress_stats = function(name) {
valid_input = (name == "congress")|(name == "state")
if (valid_input) {
if (name == "state") {
state_ave = unique(ave(cong_age$age, cong_age$state, FUN = function (x) mean(x, na.rm = TRUE)))
states = unique(cong_age$state)
state_df = data.frame(states, states_ave)
return(state_df)
}
else {
congress_ave = unique(ave(cong_age$age, cong_age$congress, FUN = function (x) mean(x, na.rm = TRUE)))
congress = unique(cong_age$congress)
state_df = data.frame(congress, congress_ave)
return(state_df)
}
}
else {
return("invalid input")
}
}
congress_stats("state")
congress_stats = function(name) {
valid_input = (name == "congress")|(name == "state")
if (valid_input) {
if (name == "state") {
state_ave = unique(ave(cong_age$age, cong_age$state, FUN = function (x) mean(x, na.rm = TRUE)))
states = unique(cong_age$state)
state_df = data.frame(states, state_ave)
return(state_df)
}
else {
congress_ave = unique(ave(cong_age$age, cong_age$congress, FUN = function (x) mean(x, na.rm = TRUE)))
congress = unique(cong_age$congress)
state_df = data.frame(congress, congress_ave)
return(state_df)
}
}
else {
return("invalid input")
}
}
congress_stats("state")
congress_stats("ste")
congress_stats("congress")
